# https://github.com/ianyh/Amethyst/blob/development/docs/configuration-files.md

# layouts Ordered list of layouts to use by layout key (default tall, wide, fullscreen, and column).
layouts:
    - two-pane
    - fullscreen
    - floating
    - wide
    - tall

# mod1 First mod (default option + shift).
# mod2 Second mod (default option + shift + control).
# mod3Â Third mod (not used by default).
# mod4 Fourth mod (not used by default).

mod1:
    - option
    - command
mod2:
    - option
    - control
    - command

# window-max-count  The max number of windows that may be visible on a screen at one time before additional windows are minimized. A value of 0 disables the feature.
window-max-count: 0
# window-margins    Boolean flag for whether or not to add margins betwen windows (default false).
window-margins: false
# smart-window-margins  Boolean flag for whether or not to set window margins if there is only one window on the screen, assuming window margins are enabled (default false).
smart-window-margins: false
# window-margin-size    The size of the margins between windows (in px, default 0).
window-margin-size: 0
# window-minimum-height The smallest height that a window can be sized to regardless of its layout frame (in px, default 0).
window-minimum-height: 0
# window-minimum-width  The smallest width that a window can be sized to regardless of its layout frame (in px, default 0)
window-minimum-width: 0
# floating  List of bundle identifiers for applications to either be automatically floating or automatically tiled based on floating-is-blacklist (default []).
floating:
    - com.apple.systempreferences
    - com.raycast.macos
    - com.philipyoungg.session-setapp

# floating-is-blacklist Boolean flag determining behavior of the floating list. true if the applications should be floating and all others tiled. false if the applications should be tiled and all others floating (default true).
floating-is-blacklist: true
# ignore-menu-bar   true if screen frames should exclude the status bar. false if the screen frames should include the status bar (default false).
ignore-menu-bar: false
# float-small-windows   true if windows smaller than a 500px square should be floating by default (default true)
float-small-windows: true
# mouse-follows-focus   true if the mouse should move position to the center of a window when it becomes focused (default false). Note that this is largely incompatible with focus-follows-mouse.
mouse-follows-focus: true
# focus-follows-mouse   true if the windows underneath the mouse should become focused as the mouse moves (default false). Note that this is largely incompatible with mouse-follows-focus
focus-follows-mouse: false
# mouse-swaps-windows   true if dragging and dropping windows on to each other should swap their positions (default false).
mouse-swaps-windows: false
# mouse-resizes-windows true if changing the frame of a window with the mouse should update the layout to accommodate the change (default false). Note that not all layouts will be able to respond to the change.
mouse-resizes-windows: false
# enables-layout-hud    true to display the name of the layout when a new layout is selected (default true).
enables-layout-hud: true
# enables-layout-hud-on-space-change    true to display the name of the layout when moving to a new space (default true).
enables-layout-hud-on-space-change: true
# use-canary-build  true to get updates to beta versions of the software (default false).
use-canary-build: true
# new-windows-to-main   true to insert new windows into the first position and false to insert new windows into the last position (default false).
new-windows-to-main: false
# follow-space-thrown-windows   true to automatically move to a space when throwing a window to it (default true).
follow-space-thrown-windows: true
# window-resize-step    The integer percentage of the screen dimension to increment and decrement main pane ratios by (default 5).
window-resize-step: 5
# screen-padding-left   Padding to apply between windows and the left edge of the screen (in px, default 0).
screen-padding-left: 0
# screen-padding-right  Padding to apply between windows and the right edge of the screen (in px, default 0).
screen-padding-right: 0
# screen-padding-top    Padding to apply between windows and the top edge of the screen (in px, default 0).
screen-padding-top: 0
# screen-padding-bottom Padding to apply between windows and the bottom edge of the screen (in px, default 0).
screen-padding-bottom: 0
# restore-layouts-on-launch true to maintain layout state across application executions (default true).
restore-layouts-on-launch: true
# debug-layout-info true to display some optional debug information in the layout HUD (default false).
debug-layout-info: true
# disable-screen-padding-on-inbuilt true to disable screen padding on in-built display (default false).
disable-screen-padding-on-inbuilt: false

# cycle-layout    Move to the next layout in the list.
cycle-layout:
    mod: mod1
    key: space

# cycle-layout-backward   Move to the previous layout in the list.
cycle-layout-backward:
    mod: nil
    key: nil

# shrink-main Shrink the main pane by a percentage of the screen dimension as defined by window-resize-step. Note that not all layouts respond to this command.
# shrink-main: NO
# expand-main Expand the main pane by a percentage of the screen dimension as defined by window-resize-step. Note that not all layouts respond to this command.
# expand-main: NO
# increase-main   Increase the number of windows in the main pane. Note that not all layouts respond to this command.
increase-main:
    mod: mod1
    key: ","
# decrease-main   Decrease the number of windows in the main pane. Note that not all layouts respond to this command.
decrease-main:
    mod: mod1
    key: "."
# command1    General purpose command for custom layouts. Functionality is layout-dependent.
command1:
    mod: nil
    key: nil

# command2    General purpose command for custom layouts. Functionality is layout-dependent.
command2:
    mod: nil
    key: nil

# command3    General purpose command for custom layouts. Functionality is layout-dependent.
command3:
    mod: nil
    key: nil

# command4    General purpose command for custom layouts. Functionality is layout-dependent.
command4:
    mod: nil
    key: nil
# focus-ccw   Focus the next window in the list going counter-clockwise.
# focus-ccw
# focus-cw    Focus the next window in the list going clockwise.
# focus-cw
# focus-main  Focus the main window in the list.
# focus-main
# focus-screen-ccw    Focus the next screen in the list going counter-clockwise.
# focus-screen-ccw
# focus-screen-cw Focus the next screen in the list going clockwise.
# focus-screen-cw
# swap-screen-ccw Move the currently focused window onto the next screen in the list going counter-clockwise.
# swap-screen-ccw
# swap-screen-cw  Move the currently focused window onto the next screen in the list going clockwise.
# swap-screen-cw
# swap-ccw    Swap the position of the currently focused window with the next window in the list going counter-clockwise.
# swap-ccw
# swap-cw Swap the position of the currently focused window with the next window in the list going clockwise.
# swap-cw
# swap-main   Swap the position of the currently focused window with the main window in the list.
# swap-main
# focus-screen-n  Move focus to the n-th screen in the list; e.g., focus-screen-3 will move mouse focus to the 3rd screen. Note that the main window in the given screen will be focused.
focus-screen-1:
    mod: mod1
    key: "1"
focus-screen-2:
    mod: mod1
    key: "2"
focus-screen-3:
    mod: mod1
    key: "3"
focus-screen-4:
    mod: nil
    key: nil
# throw-screen-n  Move the currently focused window to the n-th screen; e.g., throw-screen-3 will move the window to the 3rd screen.
throw-screen-1:
    mod: mod2
    key: "1"
throw-screen-2:
    mod: mod2
    key: "2"
throw-screen-3:
    mod: mod2
    key: "3"
throw-screen-4:
    mod: nil
    key: nil

# throw-space-n   Move the currently focused window to the n-th space; e.g., throw-space-3 will move the window to the 3rd space.
throw-space-1:
    mod: nil
    key: nil
throw-space-2:
    mod: nil
    key: nil
throw-space-3:
    mod: nil
    key: nil
throw-space-4:
    mod: nil
    key: nil
throw-space-5:
    mod: nil
    key: nil
throw-space-6:
    mod: nil
    key: nil
throw-space-7:
    mod: nil
    key: nil
throw-space-8:
    mod: nil
    key: nil
throw-space-9:
    mod: nil
    key: nil
throw-space-10:
    mod: nil
    key: nil
throw-space-11:
    mod: nil
    key: nil
throw-space-12:
    mod: nil
    key: nil
# throw-space-left    Move the currently focused window to the space to the left.
throw-space-left:
    mod: nil
    key: nil
# throw-space-right   Move currently the focused window to the space to the right.
throw-space-right:
    mod: nil
    key: nil
# toggle-float    Toggle the floating state of the currently focused window; i.e., if it was floating make it tiled and if it was tiled make it floating.
# toggle-float
# display-current-layout  Display the layout HUD with the current layout on each screen.
display-current-layout:
    mod: nil
    key: nil

# toggle-tiling   Turn on or off tiling entirely.
# toggle-tiling
# reevaluate-windows  Rerun the current layout's algorithm.
# reevaluate-windows
# toggle-focus-follows-mouse  Turn on or off focus-follows-mouse.
# toggle-focus-follows-mouse
# relaunch-amethyst   Automatically quit and reopen Amethyst.
# relaunch-amethyst
select-fullscreen-layout:
    mod: nil
    key: nil

select-column-layout:
    mod: nil
    key: nil

select-wide-layout:
    mod: nil
    key: nil

select-tall-layout:
    mod: nil
    key: nil

select-tall-right-layout:
    mod: nil
    key: nil
